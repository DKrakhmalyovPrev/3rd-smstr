/*Практикум по формальным языкам.
Задание 9: Дан язык, заданный регулярным выражением и слово из алфавита {a,b,c}.
Проверить, содержит ли язык данное слово.
*/


#include <iostream>
#include <string>
#include <set>
#include <vector>
using namespace std;

vector<string> ParseSmart(string regularExp,int ourWordsize)
{
	vector<vector<string>> OurStack;
	for (int i = 0; i < regularExp.size(); i++)
	{
		if ((regularExp[i] >= 'a') && (regularExp[i] <= 'd'))
		{
			string a = "0";
			a[0] = regularExp[i];
			vector<string> ti;
			ti.push_back(a);
			OurStack.push_back(ti);
		}
		else
		if ((regularExp[i] == '.'))
		{
			for (int j = 0; j < OurStack[OurStack.size() - 2].size(); j++)
			for (int q = 0; q < OurStack[OurStack.size() - 1].size(); q++)
			{
				OurStack[OurStack.size() - 2][j] += OurStack[OurStack.size() - 1][q];
			}
			OurStack.pop_back();
		}
		else
		if (regularExp[i] == '1')
		{
			string a = "";
			vector<string> ti;
			ti.push_back(a);
			OurStack.push_back(ti);
		}
		else
		if (regularExp[i] == '+')
		{
			for (int j = 0; j < OurStack[OurStack.size() - 1].size(); j++)
				OurStack[OurStack.size() - 2].push_back(OurStack[OurStack.size() - 1][j]);
			OurStack.pop_back();
		}
		else
		if (regularExp[i] == '*')
		{
			for (int j = 0; j < OurStack[OurStack.size() - 1].size(); j++)
			for (int q = 0; q < OurStack[OurStack.size() - 1].size(); q++)
			if (OurStack[OurStack.size() - 1][j].size() + OurStack[OurStack.size() - 1][q].size() <= ourWordsize)
				OurStack[OurStack.size() - 1].push_back(OurStack[OurStack.size() - 1][j] + OurStack[OurStack.size() - 1][q]);	
		}
		else
		{
			cout << "Wrong input";
			vector<string> a;
			return(a);
		}
	}
	return(OurStack[0]);
}

int main()
{
	string regularExp;
	string ourWord;

	cin >> regularExp;
	cin >> ourWord;
	vector<string> ourStack = ParseSmart(regularExp, ourWord.size());
	int co = 0;
	for (int i = 0; i < ourStack.size(); i++)
	{
		//cout << ourStack[i] << " ";
		if (ourStack[i] == ourWord)
			co = 1;
	}
	if (co==1)
		cout << "YES";
	else
		cout << "NO";


	return(0);
}
